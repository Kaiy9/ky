# 构建 VitePress 站点并将其部署到 GitHub Pages 的示例工作流程
name: Deploy VitePress site to Pages

on:
  # 在针对 main 分支的推送上运行
  push:
    branches: [main] # 如果你的主分支是 master，请改为 master
  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行。
# 但是，不要取消进行中的运行，因为我们希望允许这些部署完成。
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 建议使用 20 或更高版本
          cache: npm # 如果你用 pnpm 或 yarn，请改为对应的包管理器
      - name: Install dependencies
        run: npm install # 相应地改为 pnpm install 或 yarn install
      - name: Build
        run: npm run docs:build # 确保 package.json 中有这个命令
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # 从 VitePress 的构建输出目录上传
          path: .vitepress/dist # 确保这是你的构建输出目录

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
